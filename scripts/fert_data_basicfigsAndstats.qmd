---
title: "fert_data_calcs"
format: html
editor: visual
---
#Load packages

```{r}
library(tidyverse)
```
# 2018 figures
```{r}
#testing loops for making graphs changing the Y axis

yaxis_variables <- colnames(Chp1_fert_data_clean) 


for (y_col in yaxis_variables) {
  # Make sure to only include numeric or relevant columns for y
  if (is.numeric(Chp1_fert_data_clean[[y_col]])) {
    # Create the plot with dynamic y aesthetic
    Chp1_fert_data_clean$treatment <- factor(Chp1_fert_data$treatment, 
                                    levels = c("CT", "F2", "F5", "F10"))
    init_plot <- Chp1_fert_data_clean %>%
      filter(year == 2018) %>%
      ggplot(aes(x = treatment, y = .data[[y_col]])) + 
      geom_boxplot() 
    
    # Print the plot
    print(init_plot)
  }
}

InitAnova_dataset<- Chp1_fert_data_clean %>%
      filter(year == 2018)
FinalAnova_dataset <- Chp1_fert_data_clean %>%
      filter(year == 2021)

anova(lm(InitAnova_dataset$C~InitAnova_dataset$treatment))
anova(lm(InitAnova_dataset$N~InitAnova_dataset$treatment))
anova(lm(InitAnova_dataset$p~InitAnova_dataset$treatment))
anova(lm(InitAnova_dataset$CN~InitAnova_dataset$treatment))
anova(lm(InitAnova_dataset$CP~InitAnova_dataset$treatment))
anova(lm(InitAnova_dataset$NP~InitAnova_dataset$treatment))
anova(lm(InitAnova_dataset$BSI~InitAnova_dataset$treatment))
anova(lm(InitAnova_dataset$lignin~InitAnova_dataset$treatment))
anova(lm(InitAnova_dataset$ligninN~InitAnova_dataset$treatment))
```
# testing change over time figures
```{r}
#testing loops for making graphs changing the Y axis
CHP1_toolikFertPlots_changeOverTime$year <- as.numeric(CHP1_toolikFertPlots_changeOverTime$year)
yaxis_variables_delta <- colnames(CHP1_toolikFertPlots_changeOverTime) 

for (y_col in yaxis_variables_delta) {
  # Make sure to only include numeric or relevant columns for y
  if (is.numeric(CHP1_toolikFertPlots_changeOverTime[[y_col]])) {
    # Create the plot with dynamic y aesthetic
    CHP1_toolikFertPlots_changeOverTime$treatment <- factor(CHP1_toolikFertPlots_changeOverTime$treatment, 
                                    levels = c("CT", "F2", "F5", "F10"))
    delta_plot <- CHP1_toolikFertPlots_changeOverTime %>%
      ggplot(aes(x = year, y = .data[[y_col]])) + 
      geom_jitter(width = 0.1) +
      geom_smooth(method = "lm", fullrange = TRUE) +
      facet_wrap( ~ treatment,
                  scales = "free_y")
    
    # Print the plot
    print(delta_plot)
  }
}

Chp1_fert_data_time <- Chp1_fert_data_time %>% 
  mutate(delta2021P = p.2021 - p.2018) %>%
  mutate(delta2021C = C.2021 - C.2018) %>%
  mutate(delta2021N = N.2021 - N.2018) %>%
  mutate(delta2021lig = lignin.2021 - lignin.2018) %>%
  mutate(delta2021CN = CN.2021 - CN.2018) %>%
  mutate(delta2021CP = CP.2021 - CP.2018) %>%
  mutate(delta2021NP = NP.2021 - NP.2018) %>%
  mutate(delta2021ligN = ligninN.2021 - ligninN.2018)

yaxis_variables_time <- c("delta2021P", "delta2021C", "delta2021N", "delta2021lig", "delta2021CN", "delta2021CP", "delta2021NP", "delta2021ligN", "delta2021BSI")

for (y_col in yaxis_variables_time) {
  # Make sure to only include numeric or relevant columns for y
  if (is.numeric(Chp1_fert_data_time[[y_col]])) {
    # Create the plot with dynamic y aesthetic
    Chp1_fert_data_time$treatment <- factor(Chp1_fert_data_time$treatment, 
                                    levels = c("CT", "F2", "F5", "F10"))
    delta_plot2 <- Chp1_fert_data_time %>%
      ggplot(aes(x = treatment, y = .data[[y_col]])) +
      geom_boxplot()
    
    # Print the plot
    print(delta_plot2)
  }
}

  
```
# playing with some stats
```{r}
Chp1_fert_data_time <- Chp1_fert_data_time %>% 
  mutate(delta2021P = p.2021 - p.2018) %>%
  mutate(delta2021C = C.2021 - C.2018) %>%
  mutate(delta2021N = N.2021 - N.2018) %>%
  mutate(delta2021lig = lignin.2021 - lignin.2018) %>%
  mutate(delta2021CN = CN.2021 - CN.2018) %>%
  mutate(delta2021CP = CP.2021 - CP.2018) %>%
  mutate(delta2021NP = NP.2021 - NP.2018) %>%
  mutate(delta2021ligN = ligninN.2021 - ligninN.2018)
  
anova(lm(Chp1_fert_data_time$delta2021P~Chp1_fert_data_time$treatment))
anova(lm(Chp1_fert_data_time$delta2021C~Chp1_fert_data_time$treatment))
anova(lm(Chp1_fert_data_time$delta2021N~Chp1_fert_data_time$treatment))
anova(lm(Chp1_fert_data_time$delta2021lig~Chp1_fert_data_time$treatment))
anova(lm(Chp1_fert_data_time$delta2021CN~Chp1_fert_data_time$treatment))
anova(lm(Chp1_fert_data_time$delta2021CP~Chp1_fert_data_time$treatment))
anova(lm(Chp1_fert_data_time$delta2021NP~Chp1_fert_data_time$treatment))
anova(lm(Chp1_fert_data_time$delta2021ligN~Chp1_fert_data_time$treatment))

anova(lm(CHP1_toolikFertPlots_changeOverTime$deltaP~CHP1_toolikFertPlots_changeOverTime$treatment))

```

```{r}
#loops for raw values by year 
yaxis_rawvalues <- colnames(Chp1_fert_data_clean) 

for (y_col in yaxis_rawvalues) {
  # Make sure to only include numeric or relevant columns for y
  if (is.numeric(Chp1_fert_data_clean[[y_col]])) {
    # Create the plot with dynamic y aesthetic
    Chp1_fert_data_clean$treatment <- factor(Chp1_fert_data_clean$treatment, 
                                    levels = c("CT", "F2", "F5", "F10"))
    rawvalues_plot <- Chp1_fert_data_clean %>%
      ggplot(aes(x = treatment, y = .data[[y_col]])) +
      geom_boxplot() +
      facet_wrap( ~ year)
    
    # Print the plot
    print(rawvalues_plot)
  }
}
```

# does 3 years of fert and cutting lead to higher/lower lignin, bsi, or C in any plot
```{r}
f10 <- Chp1_fert_data_time %>%
  filter(treatment == "F10")
f5 <- Chp1_fert_data_time %>%
  filter(treatment == "F5")
f2 <- Chp1_fert_data_time %>%
  filter(treatment == "F2")
ct <- Chp1_fert_data_time %>%
  filter(treatment == "CT")


ct_unclean_bsi <- Chp1_fert_data %>%
  filter(treatment == "CT") %>%
  select(year, BSI, block)
t.test(ct$C.2021, ct$C.2018, mu=0,  paired = TRUE, alternative = "less")
t.test(f2$C.2021, f2$C.2018, mu=0,  paired = TRUE, alternative = "less")
t.test(f5$C.2021, f5$C.2018, mu=0,  paired = TRUE, alternative = "less")
t.test(f10$C.2021, f10$C.2018, mu=0,  paired = TRUE, alternative = "less")

t.test(ct$N.2021, ct$N.2018, mu=0,  paired = TRUE)
t.test(ct$p.2021, ct$p.2018, mu=0,  paired = TRUE)
t.test(ct$CN.2021, ct$CN.2018, mu=0,  paired = TRUE)
t.test(ct$CP.2021, ct$CP.2018, mu=0,  paired = TRUE)
t.test(ct$NP.2021, ct$NP.2018, mu=0,  paired = TRUE)
t.test(ct$lignin.2021, ct$lignin.2018, mu=0,  paired = TRUE)
t.test(ct$BSI.2021, ct$BSI.2018, mu=0,  paired = TRUE, alternative = "greater")
t.test(ct$ligninN.2021, ct$ligninN.2018, mu=0,  paired = TRUE)

anova(lm(Chp1_fert_data_clean$C ~ Chp1_fert_data_clean$year))
ggplot(ct, aes(x = , y = BSI)) +
  geom_point() +
  geom_boxplot(aes(group = year))

power.t.test(n = 3, sd=0.025, sig.level=0.05, delta = 0.15) 

```

# subsetting data by year for Anovas for the effect size variables
```{r}
Change2019<- CHP1_toolikFertPlots_changeOverTime %>%
  filter(year == "1")
Change2020 <- CHP1_toolikFertPlots_changeOverTime %>%
  filter(year == "2")
Change2021 <- CHP1_toolikFertPlots_changeOverTime %>%
  filter(year == "3")
```


```{r}
#2019 anova loop
variables_delta_byyear <- c("deltaP", "deltaC", "deltaN", "deltaCN", "deltaCP", "deltaNP", "deltaligninN", "deltaBSI", "deltalignin")
# Assuming you have a dataset named df, and the variable "treatment" is the factor

# Loop through each variable in the 'variables_delta_byyear'
for (var2019 in variables_delta_byyear) {
  # Run ANOVA with 'treatment' as the factor and the variable as the response
  formula2019 <- as.formula(paste(var2019, "~ treatment"))
  anova_result_2019 <- aov(formula2019, data = Change2019)
  
  # Print the result of the ANOVA for each variable
  cat("\nANOVA results for", var2019, ":\n")
  print(summary(anova_result_2019))
}
```


```{r}
#2020 anova loop
variables_delta_byyear <- c("deltaP", "deltaC", "deltaN", "deltaCN", "deltaCP", "deltaNP", "deltaligninN", "deltaBSI", "deltalignin")
# Assuming you have a dataset named df, and the variable "treatment" is the factor

# Loop through each variable in the 'variables_delta_byyear'
for (var2020 in variables_delta_byyear) {
  # Run ANOVA with 'treatment' as the factor and the variable as the response
  formula2020 <- as.formula(paste(var2020, "~ treatment"))
  anova_result_2020 <- aov(formula2020, data = Change2020)
  
  # Print the result of the ANOVA for each variable
  cat("\nANOVA results for", var2020, ":\n")
  print(summary(anova_result_2020))
}
```


```{r}
#2021 anova loop
variables_delta_byyear <- c("deltaP", "deltaC", "deltaN", "deltaCN", "deltaCP", "deltaNP", "deltaligninN", "deltaBSI", "deltalignin")
# Assuming you have a dataset named df, and the variable "treatment" is the factor

# Loop through each variable in the 'variables_delta_byyear'
for (var2021 in variables_delta_byyear) {
  # Run ANOVA with 'treatment' as the factor and the variable as the response
  formula2021 <- as.formula(paste(var2021, "~ treatment"))
  anova_result_2021 <- aov(formula2021, data = Change2021)
  
  # Print the result of the ANOVA for each variable
  cat("\nANOVA results for", var2021, ":\n")
  print(summary(anova_result_2021))
}
```
```{r}
variables_delta_byyear <- c("deltaP", "deltaC", "deltaN", "deltaCN", "deltaCP", "deltaNP", "deltaligninN", "deltaBSI", "deltalignin")

for (y_col2 in variables_delta_byyear) {
  {
    # Create the plot with dynamic y aesthetic
    CHP1_toolikFertPlots_changeOverTime$treatment <- factor(CHP1_toolikFertPlots_changeOverTime$treatment, 
                                    levels = c("CT", "F2", "F5", "F10"))
    delta_figures <- ggplot(CHP1_toolikFertPlots_changeOverTime, aes(x = year, y = .data[[y_col2]], fill = treatment)) +
      geom_jitter(size = 3, width = 0.15, shape = 21) +
      geom_smooth(aes(color = treatment), se = FALSE) +
      theme_bw() +
      scale_fill_brewer(palette = "YlGn") +
      scale_color_brewer(palette = "YlGn")
      
    
    # Print the plot
    print(delta_figures)
  }
  
}
  

```
```{r}
TukeyHSD(aov(Change2020$deltaCP~Change2020$treatment))
TukeyHSD(aov(Change2021$deltaP~Change2021$treatment))
```

#Coorelations?
```{r}
only2018ct <- Chp1_fert_data_clean %>%
  filter(year == "2018", treatment == "CT")
only2018 <- Chp1_fert_data_clean %>%
  filter(year == "2018")
cor.test(only2018ct$lignin, only2018ct$C)
cor.test(only2018$lignin, only2018$C)
#lignin highly coorelated with C
```
```{r}
variables_delta_byyear<- c("deltaP", "deltaC", "deltaN", "deltaCN", "deltaCP", "deltaNP", "deltaligninN", "deltaBSI", "deltalignin")

for (y_col in variables_delta_byyear) {
  # Make sure to only include numeric or relevant columns for y
  if (is.numeric(CHP1_toolikFertPlots_changeOverTime[[y_col]])) {
    # Create the plot with dynamic y aesthetic
    CHP1_toolikFertPlots_changeOverTime$treatment <- factor(CHP1_toolikFertPlots_changeOverTime$treatment, 
                                    levels = c("CT", "F2", "F5", "F10"))
    deltavalues_plot <- CHP1_toolikFertPlots_changeOverTime %>%
      ggplot(aes(x = treatment, y = .data[[y_col]], fill = treatment)) +
      geom_boxplot() +
      scale_fill_brewer(palette = "YlGn") +
      scale_color_brewer(palette = "YlGn") +
      facet_wrap( ~ year)
    
    # Print the plot
    print(deltavalues_plot)
  }
}
```

```{r}
anova(lm(CHP1_toolikFertPlots_changeOverTime$deltaC~CHP1_toolikFertPlots_changeOverTime$year*CHP1_toolikFertPlots_changeOverTime$treatment))
anova(lm(CHP1_toolikFertPlots_changeOverTime$deltaN~CHP1_toolikFertPlots_changeOverTime$year*CHP1_toolikFertPlots_changeOverTime$treatment))
anova(lm(CHP1_toolikFertPlots_changeOverTime$deltaP~CHP1_toolikFertPlots_changeOverTime$year*CHP1_toolikFertPlots_changeOverTime$treatment))
anova(lm(CHP1_toolikFertPlots_changeOverTime$deltaCN~CHP1_toolikFertPlots_changeOverTime$year*CHP1_toolikFertPlots_changeOverTime$treatment))
anova(lm(CHP1_toolikFertPlots_changeOverTime$deltaCP~CHP1_toolikFertPlots_changeOverTime$year*CHP1_toolikFertPlots_changeOverTime$treatment))
anova(lm(CHP1_toolikFertPlots_changeOverTime$deltaNP~CHP1_toolikFertPlots_changeOverTime$year*CHP1_toolikFertPlots_changeOverTime$treatment))
anova(lm(CHP1_toolikFertPlots_changeOverTime$deltalignin~CHP1_toolikFertPlots_changeOverTime$year*CHP1_toolikFertPlots_changeOverTime$treatment))
anova(lm(CHP1_toolikFertPlots_changeOverTime$deltaligninN~CHP1_toolikFertPlots_changeOverTime$year*CHP1_toolikFertPlots_changeOverTime$treatment))
anova(lm(CHP1_toolikFertPlots_changeOverTime$deltaBSI~CHP1_toolikFertPlots_changeOverTime$year*CHP1_toolikFertPlots_changeOverTime$treatment))
```

```{r}
ggplot(InitAnova_dataset, aes(x = C, y = lignin)) +
  geom_point(aes(color = treatment))
```

