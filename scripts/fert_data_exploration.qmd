---
title: "fert_data_exploration"
format: html
editor: visual
---

# load packages

```{r}
library(readr)
library(dplyr)
library(tidyr)
library(ggplot2)
install.packages("janitor")
library(janitor) # expedite cleaning and exploring data
library(scales) # scale functions for visualization
```

# fix year column to make it a factor

```{r}
# Convert to Date class if it's not already
Chp1_fert_data$year <- as.Date(Chp1_fert_data$year)
library(lubridate)

# Extract year using lubridate's year function
Chp1_fert_data$year <- year(Chp1_fert_data$year)
Chp1_fert_data$year <- factor(Chp1_fert_data$year)

# View the updated dataset
head(Chp1_fert_data)

```

# exploratory plots

```{r}
#time 0 plots
Chp1_fert_data %>%
  filter(year == 2018) %>%
  ggplot(aes(x = treatment, y = N)) + 
  geom_boxplot()

```

```{r}
# attempting to facet wrap by year for N
ggplot(Chp1_fert_data,
       aes(x = treatment, y = N)) + 
  geom_boxplot() +
  facet_wrap( ~ year)
```

```{r}
#reordering x labels and rerunning graph

Chp1_fert_data$treatment <- factor(Chp1_fert_data$treatment, 
                                    levels = c("CT", "F2", "F5", "F10"))
ggplot(Chp1_fert_data,
       aes(x = treatment, y = N)) + 
  geom_boxplot() +
  facet_wrap( ~ year)

```

# adding cnp ratios

```{r}
Chp1_fert_data <- Chp1_fert_data %>% 
  mutate(CN = C / N) %>%
  mutate(CP = C / p) %>%
  mutate(NP = N / p) %>%
  mutate(ligninN = lignin / N)
```

# exploring normality

```{r}
# List of response variables
response_vars<- c("C", "N", "p", "BSI", "lignin", "CN", "CP", "NP", "ligninN")

# Loop through each response variable
for (response in response_vars) {
  
  # Fit a linear model (replace 'predictors' with your actual variable names)
  model <- lm(as.formula(paste(response, "~ treatment")), data = Chp1_fert_data)
  
  # Get the residuals
  residuals <- model$residuals
  
  # 1. Histogram of residuals
  ggplot(data.frame(residuals), aes(x = residuals)) +
    geom_histogram(bins = 30, fill = 'lightblue', color = 'black') +
    labs(title = paste("Histogram of Residuals for", response), x = "Residuals", y = "Frequency") +
    theme_minimal() 
  
  # 2. Q-Q plot for normality
  qqnorm(residuals)
  qqline(residuals, col = "red")
  title(paste("QQ Plot of Residuals for", response))
  
  # 3. Shapiro-Wilk test for normality
  shapiro_test <- shapiro.test(residuals)
  print(paste("Shapiro-Wilk test for", response, "p-value:", shapiro_test$p.value))
}

```

# identifying large outliers

```{r}

# Subset the numeric columns
numeric_data <- Chp1_fert_data[sapply(Chp1_fert_data, is.numeric)]

# Function to identify outliers based on the IQR method
identify_outliers <- function(x) {
  Q1 <- quantile(x, 0.25, na.rm = TRUE)
  Q3 <- quantile(x, 0.75, na.rm = TRUE)
  IQR_value <- IQR(x, na.rm = TRUE)
  lower_bound <- Q1 - 1.5 * IQR_value
  upper_bound <- Q3 + 1.5 * IQR_value
  
  # Return a logical vector: TRUE for outliers, FALSE for non-outliers
  return(x < lower_bound | x > upper_bound)
}

# Apply the identify_outliers function to each numeric column
outliers_matrix <- sapply(numeric_data, identify_outliers)


```

# exporting data to csv to address outliers

```{r}
write.csv(Chp1_fert_data, 'Chp1_fert_data_clean.csv')
 #imported cleaned dataset with NA in cells out of IQR for ligning, silica, and associated ratios. These I believe were lab errors, not actual values
```

# exploring normality on cleaned dataset

```{r}
# List of response variables
response_vars_cleaned<- c("C", "N", "p", "BSI", "lignin", "CN", "CP", "NP", "ligninN")

# Loop through each response variable
for (response in response_vars_cleaned) {
  
  # Fit a linear model (replace 'predictors' with your actual variable names)
  model2 <- lm(as.formula(paste(response, "~ treatment")), data = Chp1_fert_data_clean)
  
  # Get the residuals
  residuals2 <- model2$residuals
  
  # 1. Histogram of residuals
  ggplot(data.frame(residuals2), aes(x = residuals2)) +
    geom_histogram(bins = 30, fill = 'lightblue', color = 'black') +
    labs(title = paste("Histogram of Residuals for", response), x = "Residuals", y = "Frequency") +
    theme_minimal() 
  
  # 2. Q-Q plot for normality
  qqnorm(residuals2)
  qqline(residuals2, col = "red")
  title(paste("QQ Plot of Residuals for", response))
  
  # 3. Shapiro-Wilk test for normality
  shapiro_test <- shapiro.test(residuals2)
  print(paste("Shapiro-Wilk test for", response, "p-value:", shapiro_test$p.value))
}
```

# Residuals look normal for all variables, except BSI.May Tukey test BSI
