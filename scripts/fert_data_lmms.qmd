---
title: "FertData_lmms"
format: html
editor: visual
---

## initial plots

```{r}
#pivoting my data to long format

library(tidyr)
InitAnova_dataset_scaled <- InitAnova_dataset
InitAnova_dataset_scaled[ , c("BSI", "N", "C", "lignin", "p", "CN", "CP", "NP", "ligninN")] <- 
  scale(InitAnova_dataset[ , c("BSI", "N", "C", "lignin", "p", "CN", "CP", "NP", "ligninN")])

InitAnova_dataset_long_scaled <- pivot_longer(
  InitAnova_dataset_scaled,
  cols = c(BSI, N, C, lignin, p, CN, CP, NP, ligninN),
  names_to = "trait",
  values_to = "value"
)

CHP1_toolikFertPlots_changeOverTime_scaled <- CHP1_toolikFertPlots_changeOverTime
CHP1_toolikFertPlots_changeOverTime_scaled[ , c("deltaBSI", "deltaN", "deltaC", "deltalignin", "deltaP", "deltaCN", "deltaCP", "deltaNP", "deltaligninN")] <- 
  scale(CHP1_toolikFertPlots_changeOverTime[ , c("deltaBSI", "deltaN", "deltaC", "deltalignin", "deltaP", "deltaCN", "deltaCP", "deltaNP", "deltaligninN")])

changeLong_scaled <- pivot_longer(
  CHP1_toolikFertPlots_changeOverTime_scaled,
  cols = c(deltaBSI, deltaN, deltaC, deltalignin, deltaP, deltaCN, deltaCP, deltaNP, deltaligninN),
  names_to = "trait",
  values_to = "value"
  )
# Convert the 'year' column into an ordered factor
changeLong$year <- factor(changeLong_scaled$year)

# Check the structure
str(changeLong_scaled)

allData_nodelta_long <- pivot_longer(Chp1_fert_data_clean,
                                     cols =c(BSI, lignin, ligninN, C, N, p, CN, CP, NP),
                                     names_to = "trait",
                                     values_to = "value"
                                     ) 
allData_nodelta_long$year <- factor(allData_nodelta_long$year)
```

```{r}
#testing lmm loops
library(lme4)
library(lmerTest)
library(emmeans)
library(dplyr)

traits <- unique(InitialPlots_long$trait)

results <- lapply(traits, function(tr) {
  df_trait <- filter(InitialPlots_long, trait == tr)
  model <- lmer(value ~ treatment + (1 | block), data = df_trait)
  emm <- emmeans(model, pairwise ~ treatment, adjust = "tukey")
  
  list(
    trait = tr,
    model_summary = summary(model),
    emmeans = emm
  )
})

names(results) <- traits

results[["NP"]]$model_summary
results[["NP"]]$emmeans

```

## 2019-2021 change stuff

# all data has been scaled

```{r}


traits_change <- unique(changeLong$trait)

results_change <- lapply(traits_change, function(tr_change) {
  df_trait_change <- filter(changeLong, trait == tr_change, year == "1")
  model_change <- lmer(value ~ treatment+ (1 | block) , data = df_trait_change)
  emm_change <- emmeans(model_change, pairwise ~ treatment, adjust = "tukey")
  
  list(
    trait = tr_change,
    model_summary_change = summary(model_change),
    emmeans_change = emm_change
  )
})

names(results_change) <- traits_change

results_change[["deltaN"]]$model_summary_change
results_change[["deltaN"]]$emmeans_change

```

```{r}

changeLong_scaled %>%
  filter(trait == "deltaP") %>%
ggplot(aes(x = year, y = value, color = treatment)) +
  geom_boxplot() +
  labs(title = "Interaction Plot: Treatment vs Year", x = "Year", y = "deltaP") +
  theme_minimal()

changeLong_scaled %>%
  filter(trait == "deltaNP") %>%
ggplot(aes(x = year, y = value, color = treatment)) +
  geom_boxplot() +
  labs(title = "Interaction Plot: Treatment vs Year", x = "Year", y = "deltaNP") +
  theme_minimal()
```

```{r}
library(lmerTest)
lmeranovatest<- changeLong_scaled %>%
  filter(trait == "deltaP", year == "3") 
  anova(lmer(value ~ treatment + (1 | block), data = lmeranovatest), type = 2)
  
  lmeranovatest_model <- lmer(value ~ treatment + (1 | block), data = lmeranovatest)
 
simulationOutput <- simulateResiduals(fittedModel = lmeranovatest_model)
plot(simulationOutput)
```

```{r}
##I think this is basically doing what my delta variable does? but is it calculating change?


traits_change_new <- unique(allData_nodelta_long$trait)

results_change_new <- lapply(traits_change_new, function(tr_change_new) {
  df_trait_change_new <- filter(allData_nodelta_long, trait == tr_change_new)
  model_change_new <- lmer(value ~ treatment * year + (1 | block:year), data = df_trait_change_new)
  emm_change_new <- emmeans(model_change_new, pairwise ~ treatment, adjust = "tukey")
  
  list(
    trait = tr_change_new,
    model_summary_change_new = summary(model_change_new),
    emmeans_change_new = emm_change_new
  )
})

names(results_change_new) <- traits_change_new

results_change_new[["p"]]$model_summary_change_new
results_change_new[["p"]]$emmeans_change_new
```

